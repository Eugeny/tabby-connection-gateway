 @@ -1,6 +1,8 @@
name: Docker

on:
 @@ -61,3 +62,32 @@ jobs:
  schedule:
    - cron: '25 12 * * *'
  push:
  @@ -61,3 +63,32 @@ jobs:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: eugeny/tabby-connection-gateway

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: EXTRA_DEPS=gcsfs
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy ArgoCD
        uses: cloudposse/github-action-deploy-argocd@0.8.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.8.1
        with:
          # Set always-auth in npmrc.
          always-auth: npmrc. # optional, default is false
          # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
          node-version: # optional
          # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.
          node-version-file: # optional
          # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
          architecture: x64 # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec.
          check-latest: true # optional
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
          registry-url: # optional
          # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
          scope: # optional
          # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
          token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
          cache: pnpm

      - name: NGINX configuration sync
        uses: nginxinc/nginx-for-azure-deploy-action@v0.1.0
            
